"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const schematics_1 = require("@angular-devkit/schematics");
function generateNowJson(tree, options) {
    const path = "now.json";
    const ignorePath = ".nowignore";
    const nowJson = tree.exists(path)
        ? readJson(path, tree)
        : generateEmptyNowJson(options);
    if (tree.exists(ignorePath)) {
        throw new schematics_1.SchematicsException(`There is already .nowignore file.`);
    }
    else {
        createIgnoreFile(tree, ignorePath);
    }
    if (nowJson.builds.length > 0 || nowJson.routes.length > 0) {
        // TODO: what to do if now.json has already defined routes and builders
        throw new schematics_1.SchematicsException(`There is already now.json config file.`);
    }
    nowJson.builds.push({
        src: `${options.outputPath}/**`,
        use: "@now/static"
    });
    nowJson.routes.push({
        src: "/(.*)",
        dest: `${options.outputPath}/$1`
    }, {
        src: "/",
        headers: { "cache-control": "public,max-age=0,must-revalidate" },
        dest: `${options.outputPath}/index.html`
    });
    saveJson(path, tree, JSON.stringify(nowJson, null, 2));
}
exports.generateNowJson = generateNowJson;
function generateEmptyNowJson(options) {
    return {
        version: 2,
        name: options.name,
        builds: [],
        routes: []
    };
}
function readJson(path, tree) {
    try {
        const json = tree.read(path);
        if (!json) {
            throw new Error();
        }
        return JSON.parse(json.toString());
    }
    catch (e) {
        throw new schematics_1.SchematicsException(`Error when parsing ${path}: ${e.message}`);
    }
}
function saveJson(path, tree, json) {
    if (tree.exists(path)) {
        tree.overwrite(path, json);
    }
    else {
        tree.create(path, json);
    }
}
function createIgnoreFile(tree, path) {
    tree.create(path, ``);
}
//# sourceMappingURL=now-json.js.map