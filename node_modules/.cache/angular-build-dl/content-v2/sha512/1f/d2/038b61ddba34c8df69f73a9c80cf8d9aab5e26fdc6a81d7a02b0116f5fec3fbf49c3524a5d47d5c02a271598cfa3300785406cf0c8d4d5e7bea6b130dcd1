{"version":3,"sources":["src/doc.md","src/getting-started.md","src/app/components/file-upload-section.html","src/app/components/file-upload/file-catcher.js","src/app/components/file-upload/simple-demo.html","webpack:///src/app/components/file-upload/simple-demo.ts?2ff1","../scripts/polyfills.ts","src/$_lazy_route_resource lazy namespace object","src/app/app.component.ts","src/app/app.module.ts","src/app/components/file-upload-section.ts","src/app/components/file-upload/simple-demo.ts","src/environments/environment.ts","src/main.ts"],"names":[],"mappings":"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","sourcesContent":["module.exports = \"<h3 id=\\\"usage\\\">Usage</h3>\\n<pre><code class=\\\"language-typescript\\\">import { FileSelectDirective, FileDropDirective, FileUploader } from &#39;ng2-file-upload/ng2-file-upload&#39;;</code></pre>\\n<h3 id=\\\"annotations\\\">Annotations</h3>\\n<pre><code class=\\\"language-typescript\\\">// class FileSelectDirective\\n@Directive({ selector: &#39;[ng2FileSelect]&#39; })</code></pre>\\n<pre><code class=\\\"language-typescript\\\">// class FileDropDirective\\n@Directive({ selector: &#39;[ng2FileDrop]&#39; })</code></pre>\\n<h2 id=\\\"fileselect-api\\\">FileSelect API</h2>\\n<h3 id=\\\"properties\\\">Properties</h3>\\n<ul>\\n<li><p><code>uploader</code> - (<code>FileUploader</code>) - uploader object. See using in <a href=\\\"https://github.com/valor-software/ng2-file-upload/blob/master/demo/components/file-upload/simple-demo.ts\\\">demo</a></p>\\n<p>Parameters supported by this object:</p>\\n</li>\\n</ul>\\n<ol>\\n<li><code>url</code> - URL of File Uploader&#39;s route</li>\\n<li><code>authToken</code> - auth token that will be applied as &#39;Authorization&#39; header during file send.</li>\\n<li><code>disableMultipart</code> - If &#39;true&#39;, disable using a multipart form for file upload and instead stream the file. Some APIs (e.g. Amazon S3) may expect the file to be streamed rather than sent via a form. Defaults to false.</li>\\n<li><code>itemAlias</code> - item alias (form name redefenition)</li>\\n<li><code>formatDataFunction</code> - Function to modify the request body. &#39;DisableMultipart&#39; must be &#39;true&#39; for this function to be called.</li>\\n<li><code>formatDataFunctionIsAsync</code> - Informs if the function sent in &#39;formatDataFunction&#39; is asynchronous. Defaults to false.</li>\\n<li><code>parametersBeforeFiles</code> - States if additional parameters should be appended before or after the file. Defaults to false.</li>\\n</ol>\\n<h3 id=\\\"events\\\">Events</h3>\\n<ul>\\n<li><code>onFileSelected</code> - fires when files are selected and added to the uploader queue</li>\\n</ul>\\n<h2 id=\\\"filedrop-api\\\">FileDrop API</h2>\\n<h3 id=\\\"properties-1\\\">Properties</h3>\\n<ul>\\n<li><code>uploader</code> - (<code>FileUploader</code>) - uploader object. See using in <a href=\\\"https://github.com/valor-software/ng2-file-upload/blob/master/demo/components/file-upload/simple-demo.ts\\\">demo</a></li>\\n</ul>\\n<h3 id=\\\"events-1\\\">Events</h3>\\n<ul>\\n<li><code>fileOver</code> - it fires during &#39;over&#39; and &#39;out&#39; events for Drop Area; returns <code>boolean</code>: <code>true</code> if file is over Drop Area, <code>false</code> in case of out.\\nSee using in <a href=\\\"https://github.com/valor-software/ng2-file-upload/blob/master/demo/components/file-upload/simple-demo.ts\\\">ts demo</a> and\\n<a href=\\\"https://github.com/valor-software/ng2-file-upload/blob/master/demo/components/file-upload/simple-demo.html\\\">html demo</a></li>\\n<li><code>onFileDrop</code> - it fires after a file has been dropped on a Drop Area; you can pass in <code>$event</code> to get the list of files that were dropped. i.e. <code>(onFileDrop)=&quot;dropped($event)&quot;</code></li>\\n</ul>\\n\";","module.exports = \"<h1 id=\\\"getting-started\\\">Getting started</h1>\\n<h2 id=\\\"first-of-all-welcome\\\">First of all, Welcome!</h2>\\n<h3 id=\\\"install\\\">Install</h3>\\n<p>Install the components</p>\\n<pre><code>npm install ng2-file-upload --save</code></pre>\";","export default \"<section [attr.id]=\\\"name.toLowerCase()\\\">\\n  <div class=\\\"row\\\">\\n    <tabset>\\n      <tab *ngFor=\\\"let desc of tabs\\\" heading=\\\"{{desc.heading}}\\\" (select)=\\\"select($event)\\\">\\n        <div class=\\\"card card-block panel panel-default panel-body\\\">\\n\\n          <simple-demo></simple-demo>\\n\\n  \\n        </div>\\n      </tab>\\n    </tabset>\\n  </div>\\n\\n</section>\\n\"","export default \"/*eslint-disable*/\\nvar express = require('express');\\nvar multer = require('multer');\\nvar fs = require('fs');\\nvar app = express();\\n\\nvar DIR = '/External/upload';\\n\\n\\n\\n\\nvar storage = multer.diskStorage({\\n  destination: function(req, file, cb) {\\n      cb(null, DIR);\\n   },\\n  filename: function (req, file, cb) {\\n      cb(null , file.originalname);\\n  }\\n});\\n\\n\\n\\n\\nvar upload = multer({ storage: storage }).any()\\n\\napp.use(function (req, res, next) {\\n  res.setHeader('Access-Control-Allow-Origin', 'http://localhost:4200');\\n  res.setHeader('Access-Control-Allow-Methods', 'POST');\\n  res.setHeader('Access-Control-Allow-Headers', 'X-Requested-With,content-type');\\n  res.setHeader('Access-Control-Allow-Credentials', true);\\n  next();\\n});\\n\\napp.use(upload);\\n\\n\\n\\napp.get('/api', function (req, res) {\\n  res.end('file catcher example');\\n});\\n\\napp.post('/api', function (req, res) {\\n\\n  upload(req, res, function (err) {\\n    console.log(req )\\n    if (err) {\\n      return res.end(err.toString());\\n    }\\n\\n    res.end('File is uploaded');\\n  });\\n});\\n\\n\\nvar PORT = process.env.PORT || 3000;\\n\\napp.listen(PORT, function () {\\n  console.log('Working on port ' + PORT);\\n});\\n\"","export default \"<style>\\n    .my-drop-zone { border: dotted 3px lightgray; }\\n    .nv-file-over { border: dotted 3px red; } /* Default class applied to drop zones on over */\\n    .another-file-over-class { border: dotted 3px green; }\\n\\n    html, body { height: 100%; }\\n</style>\\n\\n\\n\\n    <div class=\\\"navbar navbar-default\\\">\\n        <div class=\\\"navbar-header\\\">\\n            <a class=\\\"navbar-brand\\\" href>Upload all you want and leave it clear!</a>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n\\n        <div class=\\\"col-md-3\\\">\\n\\n            <h3>Select files</h3>\\n\\n            <div ng2FileDrop\\n                 [ngClass]=\\\"{'nv-file-over': hasBaseDropZoneOver}\\\"\\n                 (fileOver)=\\\"fileOverBase($event)\\\"\\n                 [uploader]=\\\"uploader\\\"\\n                 class=\\\"well my-drop-zone\\\">\\n                Drope the files here\\n            </div>\\n\\n            <div ng2FileDrop\\n                 [ngClass]=\\\"{'another-file-over-class': hasAnotherDropZoneOver}\\\"\\n                 (fileOver)=\\\"fileOverAnother($event)\\\"\\n                 [uploader]=\\\"uploader\\\"\\n                 class=\\\"well my-drop-zone\\\">\\n                Another drop zone\\n            </div>\\n\\n            Multiple\\n            <input type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" multiple  />    <br/>\\n\\n            Single\\n            <input type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" />\\n        </div>\\n\\n        <div class=\\\"col-md-9\\\" style=\\\"margin-bottom: 40px\\\">\\n\\n            <h3>Upload queue</h3>\\n            <p>Queue length: {{ uploader?.queue?.length }}</p>\\n\\n            <table class=\\\"table\\\">\\n                <thead>\\n                <tr>\\n                    <th width=\\\"50%\\\">Name</th>\\n                    <th>Size</th>\\n                    <th>Progress</th>\\n                    <th>Status</th>\\n                    <th>Actions</th>\\n                </tr>\\n                </thead>\\n                <tbody>\\n                <tr *ngFor=\\\"let item of uploader.queue\\\">\\n                    <td><strong>{{ item?.file?.name }}</strong></td>\\n                    <td *ngIf=\\\"uploader.options.isHTML5\\\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\\n                    <td *ngIf=\\\"uploader.options.isHTML5\\\">\\n                        <div class=\\\"progress\\\" style=\\\"margin-bottom: 0;\\\">\\n                            <div class=\\\"progress-bar\\\" role=\\\"progressbar\\\" [ngStyle]=\\\"{ 'width': item.progress + '%' }\\\"></div>\\n                        </div>\\n                    </td>\\n                    <td class=\\\"text-center\\\">\\n                        <span *ngIf=\\\"item.isSuccess\\\"><i class=\\\"glyphicon glyphicon-ok\\\"></i></span>\\n                        <span *ngIf=\\\"item.isCancel\\\"><i class=\\\"glyphicon glyphicon-ban-circle\\\"></i></span>\\n                        <span *ngIf=\\\"item.isError\\\"><i class=\\\"glyphicon glyphicon-remove\\\"></i></span>\\n                    </td>\\n                    <td nowrap>\\n                        <button type=\\\"button\\\" class=\\\"btn btn-success btn-xs\\\"\\n                                (click)=\\\"item.upload()\\\" [disabled]=\\\"item.isReady || item.isUploading || item.isSuccess\\\">\\n                            <span class=\\\"glyphicon glyphicon-upload\\\"></span> Upload\\n                        </button>\\n                        <button type=\\\"button\\\" class=\\\"btn btn-warning btn-xs\\\"\\n                                (click)=\\\"item.cancel()\\\" [disabled]=\\\"!item.isUploading\\\">\\n                            <span class=\\\"glyphicon glyphicon-ban-circle\\\"></span> Cancel\\n                        </button>\\n                        <button type=\\\"button\\\" class=\\\"btn btn-danger btn-xs\\\"\\n                                (click)=\\\"item.remove()\\\">\\n                            <span class=\\\"glyphicon glyphicon-trash\\\"></span> Remove\\n                        </button>\\n                    </td>\\n                </tr>\\n                </tbody>\\n            </table>\\n\\n            <div>\\n                <div>\\n                    Queue progress:\\n                    <div class=\\\"progress\\\" style=\\\"\\\">\\n                        <div class=\\\"progress-bar\\\" role=\\\"progressbar\\\" [ngStyle]=\\\"{ 'width': uploader.progress + '%' }\\\"></div>\\n                    </div>\\n                </div>\\n                <button type=\\\"button\\\" class=\\\"btn btn-success btn-s\\\"\\n                        (click)=\\\"uploader.uploadAll()\\\" [disabled]=\\\"!uploader.getNotUploadedItems().length\\\">\\n                    <span class=\\\"glyphicon glyphicon-upload\\\"></span> Upload all\\n                </button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-warning btn-s\\\"\\n                        (click)=\\\"uploader.cancelAll()\\\" [disabled]=\\\"!uploader.isUploading\\\">\\n                    <span class=\\\"glyphicon glyphicon-ban-circle\\\"></span> Cancel all\\n                </button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-danger btn-s\\\"\\n                        (click)=\\\"uploader.clearQueue()\\\" [disabled]=\\\"!uploader.queue.length\\\">\\n                    <span class=\\\"glyphicon glyphicon-trash\\\"></span> Remove all\\n                </button>\\n            </div>\\n\\n        </div>\\n\\n    </div>\\n\\n    <br><br>\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <div class=\\\"panel panel-default\\\">\\n                <div class=\\\"panel-heading\\\">Response</div>\\n                <div class=\\\"panel-body\\\">\\n                  {{ response }}\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n\"","export default \"import { Component } from '@angular/core';\\nimport { FileUploader } from 'ng2-file-upload';\\n\\n// const URL = '/api/';\\nconst URL = 'http://93.49.6.246:3002/api';\\n\\n@Component({\\n  selector: 'simple-demo',\\n  templateUrl: './simple-demo.html'\\n})\\nexport class SimpleDemoComponent {\\n\\n  uploader:FileUploader;\\n  hasBaseDropZoneOver:boolean;\\n  hasAnotherDropZoneOver:boolean;\\n  response:string;\\n\\n  constructor (){\\n    this.uploader = new FileUploader({url: URL});\\n\\n    this.hasBaseDropZoneOver = false;\\n    this.hasAnotherDropZoneOver = false;\\n\\n    this.response = '';\\n\\n    this.uploader.response.subscribe( res => this.response = res );\\n   // public uploader:FileUploader = new FileUploader({url: URL});\\n\\n  }\\n\\n  public fileOverBase(e:any):void {\\n    this.hasBaseDropZoneOver = e;\\n  }\\n\\n  public fileOverAnother(e:any):void {\\n    this.hasAnotherDropZoneOver = e;\\n  }\\n}\\n\"","// This file includes polyfills needed by Angular 2 and is loaded before\n// the app. You can add your own extra polyfills to this file.\nimport 'ts-helpers';\nimport 'core-js/es6/symbol';\nimport 'core-js/es6/object';\nimport 'core-js/es6/function';\nimport 'core-js/es6/parse-int';\nimport 'core-js/es6/parse-float';\nimport 'core-js/es6/number';\nimport 'core-js/es6/math';\nimport 'core-js/es6/string';\nimport 'core-js/es6/date';\nimport 'core-js/es6/array';\nimport 'core-js/es6/regexp';\nimport 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport 'core-js/es6/reflect';\n\nimport 'core-js/es7/reflect';\nimport 'zone.js/dist/zone';\nimport 'classlist-polyfill';\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\nlet gettingStarted = require('html-loader!markdown-loader!../getting-started.md');\n\n@Component({\n  selector: 'app',\n  template: `\n\n\n  <div class=\"container\">\n   \n  \n\n    <file-upload-section class=\"col-md-12\"></file-upload-section>\n  </div>\n\n  <footer class=\"footer\">\n    <div class=\"container\">\n      <p class=\"text-muted text-center\"> This page is maintained by Tomas Mali.</p>\n    </div>\n  </footer>\n  `\n})\nexport class AppComponent {\n  public gettingStarted:string = gettingStarted;\n  public ngAfterContentInit(): any {\n    setTimeout(()=>{\n      if (typeof PR !== 'undefined') {\n        // google code-prettify\n        PR.prettyPrint();\n      }\n    }, 150);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { FileUploadModule } from 'ng2-file-upload';\n\nimport { AppComponent } from './app.component';\nimport { FileUploadSectionComponent } from './components/file-upload-section';\nimport { SimpleDemoComponent } from './components/file-upload/simple-demo';\n\n@NgModule({\n  imports: [BrowserModule, CommonModule, FileUploadModule, TabsModule.forRoot(), FormsModule],\n  declarations: [AppComponent, FileUploadSectionComponent, SimpleDemoComponent],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import { Component } from '@angular/core';\n\nlet doc = require('html-loader!markdown-loader!../../doc.md');\n\nlet tabDesc:Array<any> = [\n  {\n    heading: 'Simple',\n    ts: require('!!raw-loader!./file-upload/simple-demo.ts').default,\n    html: require('!!raw-loader!./file-upload/simple-demo.html').default,\n    js: require('!!raw-loader!./file-upload/file-catcher.js').default\n  }\n];\n\n@Component({\n  selector: 'file-upload-section',\n  templateUrl: './file-upload-section.html'\n})\nexport class FileUploadSectionComponent {\n  public name:string = 'File Upload';\n  public currentHeading:string = 'Simple';\n  public doc:string = doc;\n  public tabs:any = tabDesc;\n\n  public select(e:any):void {\n    if (e.heading) {\n      this.currentHeading = e.heading;\n    }\n  }\n}\n","import { Component } from '@angular/core';\nimport { FileUploader } from 'ng2-file-upload';\n\n// const URL = '/api/';\nconst URL = 'http://93.49.6.246:3002/api';\n\n@Component({\n  selector: 'simple-demo',\n  templateUrl: './simple-demo.html'\n})\nexport class SimpleDemoComponent {\n\n  uploader:FileUploader;\n  hasBaseDropZoneOver:boolean;\n  hasAnotherDropZoneOver:boolean;\n  response:string;\n\n  constructor (){\n    this.uploader = new FileUploader({url: URL});\n\n    this.hasBaseDropZoneOver = false;\n    this.hasAnotherDropZoneOver = false;\n\n    this.response = '';\n\n    this.uploader.response.subscribe( res => this.response = res );\n   // public uploader:FileUploader = new FileUploader({url: URL});\n\n  }\n\n  public fileOverBase(e:any):void {\n    this.hasBaseDropZoneOver = e;\n  }\n\n  public fileOverAnother(e:any):void {\n    this.hasAnotherDropZoneOver = e;\n  }\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import '../../scripts/polyfills.ts';\n\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n"],"sourceRoot":"webpack:///"}